# Archivo: ./docker-compose.yml
services:
  influxdb:
    image: influxdb:2.7.12
    container_name: network-influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
    ports:
      - "8086:8086"
    restart: unless-stopped
    networks:
      - network_monitoring
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  telegraf:
    image: telegraf:1.34.4
    container_name: network-telegraf
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./telegraf/telegraf.d:/etc/telegraf/telegraf.d:ro
    restart: unless-stopped
    networks:
      - network_monitoring
    depends_on:
      influxdb:
        condition: service_healthy
    environment:
      - INFLUX_TOKEN=${INFLUXDB_TOKEN}

  grafana:
    image: grafana/grafana:latest
    container_name: network-grafana
    user: "472:472"
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
    restart: unless-stopped
    networks:
      - network_monitoring
    depends_on:
      influxdb:
        condition: service_healthy
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}

networks:
  network_monitoring:
    driver: bridge

volumes:
  influxdb_data:
  grafana_data:
