#!/bin/bash
# ---------------------------------------------------------------------------
# Generador interactivo de archivo sshd_config
#
# Este script permite configurar de forma interactiva el servicio SSH.
# - Se realizan respaldos del archivo original.
# - Se solicitan los valores de cada parámetro (mostrando descripción, opciones
#   y valores por defecto).
# - Se valida la entrada para evitar errores.
#
# Para aplicar la configuración, una vez revisado, copie el archivo generado
# sobre /etc/ssh/sshd_config y reinicie el servicio SSH.
#
# Ejemplo:
#   cp sshd_config.generated /etc/ssh/sshd_config && systemctl restart sshd
# ---------------------------------------------------------------------------

# El script debe ejecutarse como superusuario.
if [[ $EUID -ne 0 ]]; then
  echo "Este script debe ejecutarse con permisos de superusuario." >&2
  exit 1
fi

# Archivo de configuración actual y nombre del archivo generado
orig_config="/etc/ssh/sshd_config"
generated_file="sshd_config.generated"

echo "Bienvenido al generador interactivo de configuración SSH (sshd_config)."
echo "Este script le ayudará a crear un archivo de configuración adecuado."
echo "-----------------------------------------------------------------------"

# Realiza backup del archivo original, si existe.
if [[ -f "$orig_config" ]]; then
  backup_dest="/etc/ssh/sshd_config.bak.$(date +%Y%m%d%H%M%S)"
  echo "Realizando backup de $orig_config a $backup_dest"
  cp "$orig_config" "$backup_dest"
fi

# Declaración de parámetros
# Cada elemento tiene el formato:
#   Parametro|Descripción|ValorPorDefecto|Tipo (choice|number|text)|Opciones (si choice, separadas por coma)
params=(
  "AcceptEnv|Permite que se acepten variables de entorno enviadas por el cliente. (Riesgo: variables maliciosas)|no|choice|yes,no"
  "AddressFamily|Define la familia de direcciones (inet, inet6 o any)|any|choice|inet,inet6,any"
  "AllowAgentForwarding|Permite el reenvío del agente SSH (útil para autenticación sin claves locales)|no|choice|yes,no"
  "AllowGroups|Restringe el acceso SSH a ciertos grupos (espacio separado, sin comas)|<vacío>|text|"
  "AllowTcpForwarding|Permite el reenvío de puertos TCP|no|choice|yes,no"
  "AllowUsers|Restringe el acceso SSH a ciertos usuarios (espacio separado)|<vacío>|text|"
  "AuthorizedKeysFile|Ruta del archivo de claves autorizadas|.ssh/authorized_keys|text|"
  "Banner|Archivo con mensaje de advertencia previo al login|<vacío>|text|"
  "ChallengeResponseAuthentication|Usa autenticación de desafío/respuesta|yes|choice|yes,no"
  "ChrootDirectory|Directorio para limitar el acceso (chroot)|<vacío>|text|"
  "Ciphers|Lista de cifrados permitidos (separe con espacios)|aes128-ctr aes192-ctr aes256-ctr|text|"
  "ClientAliveCountMax|Número máximo de mensajes keep-alive sin respuesta|3|number|"
  "ClientAliveInterval|Intervalo (en segundos) entre mensajes keep-alive|0|number|"
  "Compression|Habilita la compresión de datos|delayed|choice|yes,no,delayed"
  "DenyGroups|Niega el acceso SSH a determinados grupos (espacio separado)|<vacío>|text|"
  "DenyUsers|Niega el acceso SSH a determinados usuarios (espacio separado)|<vacío>|text|"
  "ForceCommand|Comando a ejecutar al iniciar sesión (si se requiere limitar la sesión)|<vacío>|text|"
  "GatewayPorts|Permite que hosts remotos se conecten a puertos reenviados|no|choice|yes,no"
  "GSSAPIAuthentication|Habilita autenticación GSSAPI (Kerberos, etc.)|no|choice|yes,no"
  "GSSAPICleanupCredentials|Elimina las credenciales GSSAPI al finalizar la sesión|yes|choice|yes,no"
  "HostbasedAuthentication|Habilita autenticación basada en la clave del host|no|choice|yes,no"
  "HostbasedUsesNameFromPacketOnly|Usa solo el nombre del paquete para autenticación basada en host|no|choice|yes,no"
  "HostKey|Ruta de la clave del host|/etc/ssh/ssh_host_rsa_key|text|"
  "IgnoreRhosts|Ignora el archivo .rhosts del usuario|yes|choice|yes,no"
  "IgnoreUserKnownHosts|Ignora el archivo known_hosts del usuario|no|choice|yes,no"
  "KerberosAuthentication|Habilita autenticación Kerberos|no|choice|yes,no"
  "KerberosGetAFSToken|Obtiene un token AFS durante autenticación Kerberos|no|choice|yes,no"
  "KerberosOrLocalPasswd|Permite contraseña local si Kerberos falla|yes|choice|yes,no"
  "KerberosTicketCleanup|Elimina tickets Kerberos al finalizar la sesión|yes|choice|yes,no"
  "KeyRegenerationInterval|Intervalo para regenerar la clave del servidor (p.ej. 1h)|1h|text|"
  "ListenAddress|Dirección IP en la que escucha SSH|0.0.0.0|text|"
  "LoginGraceTime|Tiempo permitido para autenticarse (p.ej. 2m)|2m|text|"
  "LogLevel|Nivel de log (VERBOSE, INFO, etc.)|INFO|choice|QUIET,FATAL,ERROR,INFO,VERBOSE,DEBUG,DEBUG1,DEBUG2,DEBUG3"
  "MACs|Códigos de autenticación permitidos (separe con espacios)|hmac-sha2-256 hmac-sha2-512|text|"
  "Match|Condicional para aplicar configuraciones a ciertos usuarios/hosts|<vacío>|text|"
  "MaxAuthTries|Número máximo de intentos de autenticación|6|number|"
  "MaxSessions|Número máximo de sesiones concurrentes|10|number|"
  "MaxStartups|Control de tasa de conexiones entrantes|4|number|"
  "PasswordAuthentication|Permite autenticación con contraseña|yes|choice|yes,no"
  "PermitEmptyPasswords|Permite iniciar sesión sin contraseña (no recomendado)|no|choice|yes,no"
  "PermitOpen|Lista de puertos/host:puerto permitidos para reenvío (espacio separado)|localhost:80|text|"
  "PermitRootLogin|Permite login de root (opciones: yes, no, prohibit-password, forced-commands-only)|no|choice|yes,no,prohibit-password,forced-commands-only"
  "PermitTunnel|Permite la creación de túneles SSH|no|choice|yes,no"
  "PermitUserEnvironment|Permite que el usuario configure variables de entorno propias|no|choice|yes,no"
  "PidFile|Ubicación del archivo PID para SSH|/run/sshd.pid|text|"
  "Port|Puerto en el que escucha SSH|22|number|"
  "PrintLastLog|Muestra el último login del usuario|yes|choice|yes,no"
  "PrintMotd|Muestra el mensaje del día (MOTD)|yes|choice|yes,no"
  "Protocol|Versiones del protocolo SSH soportadas (1,2)|2|choice|1,2"
  "PubkeyAuthentication|Habilita autenticación por clave pública|yes|choice|yes,no"
  "RhostsRSAAuthentication|Habilita autenticación RhostsRSA|no|choice|yes,no"
  "RSAAuthentication|Habilita autenticación RSA|yes|choice|yes,no"
  "ServerKeyBits|Tamaño (en bits) de la clave del host|2048|number|"
  "StrictModes|Verifica permisos y propiedad de los archivos de configuración|yes|choice|yes,no"
  "Subsystem|Define un subsistema (p.ej. sftp)|sftp /usr/lib/openssh/sftp-server|text|"
  "SyslogFacility|Facilidad de syslog para los logs de SSH|AUTH|choice|DAEMON,USER,AUTH,AUTHPRIV,LOCAL0,LOCAL1,LOCAL2,LOCAL3,LOCAL4,LOCAL5,LOCAL6,LOCAL7"
  "TCPKeepAlive|Habilita el mecanismo TCP keep-alive|yes|choice|yes,no"
  "UseDNS|Realiza resolución DNS de direcciones IP en logs|no|choice|yes,no"
  "UseLogin|Utiliza el wrapper login(1) para la autenticación|no|choice|yes,no"
  "UsePAM|Utiliza PAM para autenticación|yes|choice|yes,no"
  "UsePrivilegeSeparation|Separa privilegios para mayor seguridad (sandbox recomendado)|sandbox|choice|yes,no,sandbox"
  "X11DisplayOffset|Offset para la pantalla X11|10|number|"
  "X11Forwarding|Permite reenvío de X11 (para apps gráficas remotas)|no|choice|yes,no"
  "X11UseLocalhost|Restringe el reenvío X11 a la máquina local|yes|choice|yes,no"
  "XAuthLocation|Ruta del programa xauth|<vacío>|text|"
  "KexAlgorithms|Lista de algoritmos para intercambio de claves (separe con espacios)|<vacío>|text|"
  "AuthorizedKeysCommand|Comando para obtener claves autorizadas dinámicamente|<vacío>|text|"
  "AuthorizedKeysCommandUser|Usuario que ejecuta AuthorizedKeysCommand|<vacío>|text|"
)

# Función para solicitar y validar el valor de un parámetro.
prompt_parameter() {
  local param="$1"
  local description="$2"
  local def="$3"
  local type="$4"
  local choices="$5"
  local input

  echo "-----------------------------------------------------------------------"
  echo "Parámetro: $param"
  echo "Descripción: $description"
  if [[ "$def" == "<vacío>" ]]; then
    echo "Valor por defecto: (vacío)"
  else
    echo "Valor por defecto: $def"
  fi

  # Si es de tipo 'choice', se muestran las opciones.
  if [[ "$type" == "choice" && -n "$choices" ]]; then
    IFS=',' read -ra opts <<< "$choices"
    echo "Opciones disponibles:"
    local idx=1
    for opt in "${opts[@]}"; do
      echo "  $idx) $opt"
      ((idx++))
    done
    while true; do
      read -rp "Seleccione una opción (número) o presione Enter para usar el valor por defecto: " sel
      if [[ -z "$sel" ]]; then
        input="$def"
        break
      elif [[ "$sel" =~ ^[0-9]+$ ]] && (( sel >= 1 && sel <= ${#opts[@]} )); then
        input="${opts[$((sel-1))]}"
        break
      else
        echo "Entrada inválida. Intente nuevamente."
      fi
    done
  elif [[ "$type" == "number" ]]; then
    while true; do
      read -rp "Ingrese un número o presione Enter para usar el valor por defecto: " inp
      if [[ -z "$inp" ]]; then
        input="$def"
        break
      elif [[ "$inp" =~ ^[0-9]+$ ]]; then
        input="$inp"
        break
      else
        echo "Debe ingresar un valor numérico."
      fi
    done
  else
    # Para tipo texto, se acepta cualquier entrada (se usa el valor por defecto si está vacío)
    read -rp "Ingrese el valor o presione Enter para usar el valor por defecto: " inp
    if [[ -z "$inp" ]]; then
      input="$def"
    else
      input="$inp"
    fi
  fi

  # Para parámetros opcionales que pueden quedar vacíos, se conserva el valor "<vacío>" o se escribe nada.
  if [[ "$input" == "<vacío>" ]]; then
    input=""
  fi

  # Escribe la línea de configuración (se respeta la sintaxis: Clave [valor])
  if [[ -n "$input" ]]; then
    echo "$param $input" >> "$generated_file"
  else
    # Si el valor quedó vacío, se comenta la línea (el parámetro se omite)
    echo "# $param" >> "$generated_file"
  fi
}

# Crea (o limpia) el archivo generado.
> "$generated_file"
{
  echo "# Archivo generado interactivamente por el script"
  echo "# Fecha: $(date)"
  echo ""
} >> "$generated_file"

# Itera sobre cada parámetro y solicita su valor.
for entry in "${params[@]}"; do
  IFS='|' read -r param description def type choices <<< "$entry"
  prompt_parameter "$param" "$description" "$def" "$type" "$choices"
done

echo "-----------------------------------------------------------------------"
echo "Archivo de configuración generado: $generated_file"
echo "Revise el contenido y, si está correcto, aplíquelo:"
echo "  cp $generated_file /etc/ssh/sshd_config && systemctl restart sshd"
exit 0
